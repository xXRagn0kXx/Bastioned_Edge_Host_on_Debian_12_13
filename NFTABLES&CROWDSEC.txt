#################################################################################
#    NMAP AND SSH PROTECTION ATTACKS USING NFTABLES AND CROWDSEC ON DEBIAN12    #
#################################################################################
    1   Requisitos Previos
             - Sistema: Debian 12 actualizado.
             - Privilegios: Acceso con usuario root o mediante sudo.
             - Conexión a Internet: Necesaria para descargar paquetes y actualizaciones.
             - Conocimientos básicos: Familiaridad con la terminal y edición de archivos de configuración.

    2   Instalación y Configuración de nftables        
    2.1 Instalación
        Actualiza el sistema e instala nftables con:
             - sudo apt update
             - sudo apt install nftables

    2.2 Habilitar y Arrancar el Servicio
        Para que nftables se inicie automáticamente al arrancar el sistema, ejecuta:
             - sudo systemctl enable nftables
             - sudo systemctl start nftables

    2.3 Configuración Avanzada
        La siguiente configuración utiliza un conjunto dinámico llamado blocklist. Este conjunto almacenará las IPs que Crowdsec identifique como maliciosas.
        Además, se aplican reglas para limitar intentos de conexión en SSH y para bloquear patrones de escaneo típicos de herramientas como Nmap.

        Crea o edita el archivo /etc/nftables.conf con el siguiente contenido:
             - sudo nano /etc/nftables.conf

#!/usr/sbin/nft -f
flush ruleset

table inet filter {

        # Conjunto dinámico para IPs bloqueadas, con timeout de 1 hora
        set blocklist-ipv4 {
        type ipv4_addr
        flags dynamic, timeout
        }

        # Conjunto dinámico para IPs bloqueadas (IPv6)
        set blocklist-ipv6 {
        type ipv6_addr
        flags dynamic, timeout
        }

        chain input {
                type filter hook input priority 0; policy drop;

        # Permitir conexiones ya establecidas o relacionadas
                ct state established,related accept

        # Permitir tráfico en la interfaz local (loopback)
                iifname "lo" accept

       # Bloquear IPs que estén en la blocklist (actualizada por Crowdsec)
                ip saddr @blocklist-ipv4 drop
                ip6 saddr @blocklist-ipv6 drop

        # Permitir ICMP (ping) - solo echo-request y echo-reply
                ip protocol icmp icmp type { echo-request, echo-reply } accept

        # Permitir conexiones TCP (puerto 22) y limitar nuevas conexiones a 10 por minuto añadiendolas a un contador
        #       tcp dport 22 ct state new limit rate 10/minute counter accept

        # Permitir conexiones aolo SSH (puerto 22) y limitar nuevas conexiones a 10 por minuto añadiendolas a un contador
                tcp dport 22 ct state new tcp flags syn limit rate 10/minute counter accept

        # Bloquear escaneos nmap comunes mediante combinaciones inusuales de flags TCP
        # Escaneo NULL: todos los flags desactivados
                tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 drop

        # Escaneo FIN: solo flag FIN activo
                tcp flags & (fin|syn) == fin drop comment "FIN scan"

        # Escaneo XMAS: FIN, PSH y URG activos
                tcp flags & (fin|psh|urg) == fin|psh|urg drop comment "XMAS scan"

        # Combinaciones inválidas de flags (SYN con FIN)
                tcp flags & (syn|fin) == syn|fin drop comment "SYN+FIN"

        # Combinaciones inválidas de flags (SYN con RST)
                tcp flags & (syn|rst) == syn|rst drop comment "SYN+RST"

        # Escaneo ACK+FIN o FIN+ACK
                tcp flags & (ack|fin) == ack|fin drop comment "ACK|FIN + FYN|ACK scan"

        # Escaneo Maimon: FIN activo con URG/PSH inactivos
                tcp flags & (fin|psh|urg) == fin drop

        # Protección contra paquetes inválidos (ej. sin handshake TCP)
                ct state invalid counter drop

        # Protección contra fragmentación sospechosa
                ip frag-off & 0x1fff != 0 counter drop

        # Bloquear flags reservados (ECN/CWR activos sin negociación previa)
                tcp flags & (ecn|cwr) != 0x0 drop comment "Flags reservados activos (RFC 3540)"

        # NULL scan: Paquetes con todos los flags desactivados (0x0).
                tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 drop comment "NULL scan"

        # Escaneo ACK: Usado para detectar reglas de firewall.
                tcp flags ack tcp flags & (syn|fin|rst|urg|psh) == 0 drop comment "Bloquear escaneos ACK"

        # Anti-fingerprinting
                tcp option timestamp exists drop comment "Bloquear timestamp (OS detection)"
                tcp option sack-perm exists drop comment "Bloquear SACK (manipulación de paquetes)"
                tcp option md5sig exists drop comment "Evitar firmas MD5 (rare en escaneos)"
                tcp option window exists drop comment "Bloquear opción Window Scale"
                tcp option mss exists drop comment "Bloquear MSS para evitar fingerprinting"

        #Bloquear escaneos Window basados en tamaño de ventana TCP
                tcp flags ack tcp window <= 1024 drop comment "Bloquear escaneos Window"

        # Bloquear paquetes con puerto fuente 0 (anómalo en escaneos o intentos de evasión)
                tcp sport 0 drop comment "Bloquear paquetes con puerto fuente 0"

        # Bloquear paquetes con puerto destino 0 (anómalo en escaneos o intentos de evasión)
                tcp dport 0 drop comment "Bloquear paquetes con puerto destino 0"

        #Protección extendida TCP
                tcp option fastopen exists drop comment "Bloquear TCP Fast Open (RFC 7413)"

        # Límite global de nuevas conexiones (Opcional)
        # ct state new limit rate 30/second counter accept

        # Logging de paquetes bloqueados (opcional)
                counter log prefix " [(PAQUETE BLOQUEADO)]: " drop

        }

        chain forward {
                type filter hook forward priority 0; policy drop;
        }

        chain output {
                type filter hook output priority 0; policy accept;
        }
}


#########################################################################################################################################################################
    Explicación de las principales reglas:

     - flush ruleset: Limpia cualquier regla previa para evitar conflictos.
     - table intet filter: Tabla pricipal que contendra toda la escructura y las cadenas mas con los conjuntos de nuestro nftables
     - blocklist-ipv4: Define un conjunto dinámico de IPs version 4 que se bloquearán automáticamente durante el tiempo que estime CrowdSec.
     - blocklist-ipv6: Define un conjunto dinámico de IPs version 6 que se bloquearán automáticamente durante el tiempo que estime CrowdSec.
     - chain input: Cadena  que contendra todas las reglas de entrada a nuestra maquina.
     - ct state established,related accept: Permite tráfico de conexiones ya establecidas o relacionadas.
     - iifname "lo" accept: Se permite el tráfico de la interfaz loopback.
     - ICMP: Se permite el ping (echo-request y echo-reply).
     - SSH con limitación: Solo se aceptan hasta 10 nuevas conexiones por minuto al puerto 22, ayudando a mitigar ataques de fuerza bruta.
     - ip saddr @blocklist-ipv4 drop: Bloquea el tráfico proveniente de IPs version 4 presentes en la lista dinámica de CrowdSec.
     - ip saddr @blocklist-ipv6 drop: Bloquea el tráfico proveniente de IPs version 6 presentes en la lista dinámica de CrowdSec.
     - Bloqueo de escaneos nmap: Se aplican reglas para descartar paquetes con combinaciones de flags consideradas anómalas (características de ciertos escaneos).
     - chain forward: Esta cadena contrendra las reglas de reenvio de trafico en la maquina, por defecto todo deshabilitado.
     - chain output: Esta cadena contrendra las reglas de salida de trafico en la maquina, por defecto todo el trafico saliente habilitado.
        
    (IMPORTANTE) Una vez guardado el archivo, revisa la configuración ejecutando:
             - sudo nft -f /etc/nftables.conf
        Si el comando no duelve nada el fichero esta correcto

        Reiniciamos el servicio para aplicar los cambios
             -  sudo systemctl restart nftables.service
        
        Comprobamos el servicio
             - sudo systemctl status nftables.service

        Si todo esta ok hasta aqui hemos creado el nucleo de nuestro Firewall, ahora vamos a hacerlo un poco mas inteligente con reconomiento por reputacion.

#########################################################################################################################################################################

    3    Instalación y Configuración de Crowdsec
         Crowdsec es un sistema colaborativo que analiza logs en busca de comportamientos maliciosos y genera decisiones (por ejemplo, bloqueos) 
         que se pueden aplicar automáticamente mediante un bouncer.

    3.1 Instalación de Crowdsec
        Agregar el repositorio oficial de Crowdsec:
        Ejecuta el siguiente comando para instalar el script que configura el repositorio:
             - curl -s https://install.crowdsec.net | sudo sh   
            o bien
             - curl -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh | sudo bash

        Instalar Crowdsec:
             - sudo apt install crowdsec

        Verificar el estado del servicio:
             - sudo systemctl status crowdsec

    3.2 Instalación del Bouncer para nftables
        El bouncer es el componente que se encarga de aplicar las decisiones de Crowdsec en nftables, actualizando el conjunto dinámico blocklist.

        Instala el bouncer para nftables:
             - sudo apt install crowdsec-firewall-bouncer-nftables

    3.3 Configuración de Escenarios y Fuentes de Logs
        Crowdsec trae escenarios preconfigurados para detectar ataques en SSH, fuerza bruta y otros vectores. Para instalar la colección de escenarios de Linux, ejecuta:
             - sudo cscli collections install crowdsecurity/linux
             - sudo cscli collections install crowdsecurity/sshd

        Si nos inidica "Nothing to do." ya estaran instaladas.

        Revisa los escenarios disponibles:
             - sudo cscli scenarios list

        Tienes mas colecciones adicionales disponibles con:
             - sudo cscli collections list -a

    3.4 Integración con nftables:
        El bouncer leerá las decisiones generadas por Crowdsec (por ejemplo, detectar intentos fallidos de SSH o actividad sospechosa) y actualizará automáticamente
        el conjunto blocklist definido en tu archivo de nftables. De esta forma, las IPs maliciosas quedarán bloqueadas durante el tiempo configurado (1 hora en este ejemplo).
        
        Si deseas que CrowdSec actualice las listas en tu fichero de reglas personalizadas, debes modificar la configuración del bouncer para que apunte a la misma tabla y cadena
        donde se encuentran tus sets en el fichero /etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yaml

             - sudo   nano /etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yaml

        En el apartado  ## nftables del fichero debemos modificar los valores "table" y "chain" con "filter" e "input" tal y como hemos puesto
        en el nonbre de la configuracion de nuestro /etc/nftables.conf

## nftables
nftables:
  ipv4:
    enabled: true
    set-only: false
    table: filter
    chain: input
    priority: -10
  ipv6:
    enabled: true
    set-only: false
    table: filter
    chain: input
    priority: -10

nftables_hooks:
  - input
  - forward

#########################################################################################################################################################################

    3.5 Reiniciar Servicios
        Para asegurarte de que todos los cambios se apliquen, reinicia los servicios de Crowdsec y del bouncer:
             - sudo systemctl restart crowdsec
             - sudo systemctl restart crowdsec-firewall-bouncer-nftables

    4  Verificación y Monitorización
    4.1 Verificar Reglas de nftables
        Para comprobar que las reglas están activas, utiliza:
             - sudo nft list ruleset

    4.2 Comprobar el Estado de Crowdsec
        Revisa los logs de Crowdsec para ver la actividad y decisiones:
             - sudo journalctl -u crowdsec

    4.3 Administrar decisiones
        Las decisiones son las reglas que bloquaran o no el trafico desde las direcciones espeficificadas, para administrarlas teneomos las siguientes utilidades:

        Listar decisiones:
             - cscli decisions list
    
        Añadir decisiones:
             Individual (no recomended, use nftables por eficient resources on linux)
                 - sudo cscli decisions add --ip 192.168.1.1 --duration 87600h --reason "web bruteforce"
             Rango
                 - sudo cscli decisions add --ip cscli decisions add --range 162.142.125.0/24 --duration 87600h --reason "Ataques SSH de Cersys" 109.205.213.99 --duration 0 --reason "Ataque SSH"

        Borrar decisiones:
             Individual (Borrado de la decision con IP address 162.142.125.50)
                 - sudo cscli decisions delete --ip 162.142.125.50
             Rango (Borrado de decisiones con IP rango 162.142.125.0/24)
                 - sudo cscli decisions delete --range 162.142.125.0/24

    4.4 Monitorización de Bloqueos
        El bouncer actualiza dinámicamente la blocklist. Puedes revisar esta lista con:
                 - sudo nft list set inet filter blocklist
        Monitorear las decisiones tomadas: 
                 - sudo cscli decisions list
        Monitorear las alertas tomadas debido a decisiones:
                 - sudo cscli alerts list
        (IMPORTANTE) Revisar las metricas de bloqueo en base a todas las decisiones
                 - sudo cscli metrics show bouncers
        
        Esta visualización te mostrará las IPs actualmente bloqueadas junto con su tiempo restante.

    5   Consideraciones Finales
    5.1 Ajustes según necesidades:
            Dependiendo del entorno y la cantidad de tráfico, es posible que debas ajustar los límites (por ejemplo, en la regla SSH) o las reglas de bloqueo para reducir falsos positivos.

    5.2 Actualización de escenarios:
            Mantén actualizada la colección de escenarios de Crowdsec para beneficiarte de las últimas reglas y detecciones.

    5.3 Monitorización constante:
            Revisa periódicamente los logs y las decisiones para afinar la configuración de seguridad según el comportamiento real de tu red.
            Los paquetes bloqueados apareceran como 2025-03-23T01:20:25.832745+01:00 Hostname kernel: [40387.495652]  [(PAQUETE BLOQUEADO)]: +  "las direcciones origen - destino"            
                 - sudo cat /var/log/kern.log
                 - sudo cat /var/log/syslog
        
        Las conexiones que no consiga bloquear el firewall aparecen en:
                 - sudo cat /var/log/auth.log   

        Comprobar que CrowdSec envia metricas y no tiene errores:
                 - sudo cat /var/log/crowdsec.log

        Comprobar que el Bouncer Firewall de CrowdSec para nftables actualiza las decisiones de la base de datos de CrowdSec y no tiene errores:
                 - sudo cat /var/log/crowdsec-firewall-bouncer.log

    6   Conclusión
            Esta guía te proporciona una configuración avanzada de nftables con un conjunto dinámico que se integra con Crowdsec. 
            Con esta solución, tu sistema Debian 12 estará protegido contra escaneos nmap y accesos SSH no autorizados,
            además de contar con una capa colaborativa de seguridad que bloquea automáticamente las IPs maliciosas.

            Implementa y ajusta estas configuraciones según las características específicas de tu red para mantener una defensa proactiva y adaptativa.
